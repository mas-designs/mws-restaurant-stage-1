
let restaurants,neighborhoods,cuisines
var map
var markers=[]
document.addEventListener('DOMContentLoaded',(event)=>{fetchNeighborhoods();fetchCuisines();});fetchNeighborhoods=()=>{DBHelper.fetchNeighborhoods((error,neighborhoods)=>{if(error){console.error(error);}else{self.neighborhoods=neighborhoods;fillNeighborhoodsHTML();}});}
fillNeighborhoodsHTML=(neighborhoods=self.neighborhoods)=>{const select=document.getElementById('neighborhoods-select');neighborhoods.forEach(neighborhood=>{const option=document.createElement('option');option.innerHTML=neighborhood;option.value=neighborhood;select.append(option);});}
addGoogleMapsSnippet=()=>{var scriptSnippet=document.createElement('SCRIPT');scriptSnippet.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDY5-Tacq3xwQ0PIeERI0GlCh2D29rNLkM&libraries=places&callback=initMap";document.body.appendChild(scriptSnippet);}
fetchCuisines=()=>{DBHelper.fetchCuisines((error,cuisines)=>{if(error){console.error(error);}else{self.cuisines=cuisines;fillCuisinesHTML();}});}
fillCuisinesHTML=(cuisines=self.cuisines)=>{const select=document.getElementById('cuisines-select');cuisines.forEach(cuisine=>{const option=document.createElement('option');option.innerHTML=cuisine;option.value=cuisine;select.append(option);});}
window.initMap=()=>{let loc={lat:40.722216,lng:-73.987501};self.map=new google.maps.Map(document.getElementById('map'),{zoom:12,center:loc,scrollwheel:false});updateRestaurants();}
updateRestaurants=()=>{const cSelect=document.getElementById('cuisines-select');const nSelect=document.getElementById('neighborhoods-select');const cIndex=cSelect.selectedIndex;const nIndex=nSelect.selectedIndex;const cuisine=cSelect[cIndex].value;const neighborhood=nSelect[nIndex].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine,neighborhood,(error,restaurants)=>{if(error){console.error(error);}else{resetRestaurants(restaurants);fillRestaurantsHTML();}})}
resetRestaurants=(restaurants)=>{self.restaurants=[];const ul=document.getElementById('restaurants-list');ul.innerHTML='';self.markers.forEach(m=>m.setMap(null));self.markers=[];self.restaurants=restaurants;}
fillRestaurantsHTML=(restaurants=self.restaurants)=>{const ul=document.getElementById('restaurants-list');restaurants.forEach(restaurant=>{ul.append(createRestaurantHTML(restaurant));});addMarkersToMap();}
createRestaurantHTML=(restaurant)=>{const li=document.createElement('li');let picture=document.createElement('picture');picture.className='restaurant-img';ResponsiveHelper.createResponsiveImageBlock(restaurant,picture);li.append(picture);const name=document.createElement('h2');name.innerHTML=restaurant.name;li.append(name);const neighborhood=document.createElement('p');neighborhood.innerHTML=restaurant.neighborhood;li.append(neighborhood);const address=document.createElement('p');address.innerHTML=restaurant.address;li.append(address);const more=document.createElement('a');more.innerHTML='View Details';more.href=DBHelper.urlForRestaurant(restaurant);li.append(more)
return li;}
addMarkersToMap=(restaurants=self.restaurants)=>{restaurants.forEach(restaurant=>{const marker=DBHelper.mapMarkerForRestaurant(restaurant,self.map);google.maps.event.addListener(marker,'click',()=>{window.location.href=marker.url});self.markers.push(marker);});}